//- define the mixin

//- take in a store that defaults to empty object.
//- if someone passes a store, we have the info. if we are not passed a store we have an empty object
mixin storeForm(store = {})
  form(action=`/add/${store._id || ''}` method = "POST" class="card" enctype="multipart/form-data")
    label(for="name") Name:
    input(type="text" name="name" value = store.name)
    label(for="description") Description:
    textarea(name="description")= store.description
    //- IMAGE UPLOAD with client-side
    label(for="photo") Photo:
      input(type="file" name="photo" id="photo" accept="image/gif, image/png, image/jpeg")
      if store.photo 
        img(src=`/uploads/${store.photo}`, alt=store.name, width=200)
    //- address lng lat
    lable(for="address") Address:
    //-in app.js there's bodyParser.urlencoded({extended: true}). allows to use nested
    input(type="text" id="address" value=(store.location && store.location.address) name="location[address]")
    label(for="lng") Address Longitude
    input(type="text" id='lng' name='location[coordinates][0]' value=(store.location && store.location.coordinates[0]) required)
    label(for="lat") Address Latitude
    input(type="text" id='lat' name='location[coordinates][1]' value=(store.location && store.location.coordinates[1]) required)

    //-predef set of tags
    - const choices = ['wifi', 'open late', 'family friendly', 'vegan', 'dog friendly', 'licensed']
    - const tags = store.tags || []
    ul.tags 
      each choice in choices
        .tag.tag__choice
          input(type="checkbox" id=choice value=choice name="tags" checked=(tags.includes(choice)))
          label(for=choice) #{choice}
    input(type="submit" value="Save" class="button")